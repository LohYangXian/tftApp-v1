# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from LoadingScreen import *
from ResultsWindow import *
from getters import *
from PyQt5.QtGui import QPixmap
import cgitb 
cgitb.enable(format = 'text')

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(996, 586)
        MainWindow.setMinimumSize(QtCore.QSize(996, 586))
        MainWindow.setMaximumSize(QtCore.QSize(996, 586))
        MainWindow.setStyleSheet("QWidget#centralwidget{ border-image: url(:/newPrefix/MainWindow.jpg);}\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QWidget#centralwidget{  border-image: url(:/newPrefix/MainWindow.jpg);}")
        self.centralwidget.setObjectName("centralwidget")

        #Added function to go to loading screen when button clicked
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.openWindow())
        self.pushButton.setGeometry(QtCore.QRect(360, 460, 281, 71))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 541, 91))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(48)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 320, 591, 81))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(690, 320, 181, 81))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

            

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Analyse"))
        self.label.setText(_translate("MainWindow", "TFT Statistics Profile"))
        self.lineEdit.setText(_translate("MainWindow", "Enter your Summoner Name"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Select Region"))
        self.comboBox.setItemText(1, _translate("MainWindow", "na1"))
        self.comboBox.setItemText(2, _translate("MainWindow", "br1"))
        self.comboBox.setItemText(3, _translate("MainWindow", "eun1"))
        self.comboBox.setItemText(4, _translate("MainWindow", "euw1"))
        self.comboBox.setItemText(5, _translate("MainWindow", "jp1"))
        self.comboBox.setItemText(6, _translate("MainWindow", "kr"))
        self.comboBox.setItemText(7, _translate("MainWindow", "la1"))
        self.comboBox.setItemText(8, _translate("MainWindow", "la2"))
        self.comboBox.setItemText(9, _translate("MainWindow", "na1"))
        self.comboBox.setItemText(10, _translate("MainWindow", "oc1"))
        self.comboBox.setItemText(11, _translate("MainWindow", "ru"))
        self.comboBox.setItemText(12, _translate("MainWindow", "tr1"))



class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self, parent = None):
        super(MainWindow,self).__init__(parent=parent)
        self.setupUi(self)
        self.pushButton.clicked.connect(self.openWindow)

    def openWindow(self):
        self.hide()
        self.window = QtWidgets.QMainWindow()
        self.ui = ResultsWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        self.ui.label_Summoner.setText(self.lineEdit.text())

        summoner_name = self.lineEdit.text()
        my_region = self.comboBox.currentText()

        puuid = get_puuid(summoner_name,my_region)
        match_History = get_MatchHistory(puuid,my_region,100)
        personal_Games = diagnoseGames(puuid,my_region,match_History)
        diagnosedChamps = diagnoseChampions(personal_Games)
        diagnosedTraits = diagnoseTraits(personal_Games)

        #Get names of favourite 3 champs, traits and items 
        favTraits = getFavouriteTraits(diagnosedTraits)
        favTraits1 = favTraits[0][0]
        favTraits2 = favTraits[1][0]
        favTraits3 = favTraits[2][0]

        #Set Trait Images based on results
        self.ui.favTraits1 = QPixmap("Images/Traits/" + favTraits1 + ".png")
        self.ui.label_traits1.setPixmap(self.ui.favTraits1)
        
        self.ui.favTraits2 = QPixmap("Images/Traits/" + favTraits2 + ".png")
        self.ui.label_traits2.setPixmap(self.ui.favTraits2)

        self.ui.favTraits3 = QPixmap("Images/Traits/" + favTraits3 + ".png")
        self.ui.label_traits3.setPixmap(self.ui.favTraits3)

        favChamps = getFavouriteChamps(diagnosedChamps)
        favChamps1 = favChamps[0][0]
        favChamps2 = favChamps[1][0]
        favChamps3 = favChamps[2][0]

        #Set Champion Images based on results
        self.ui.favChamps1 = QPixmap("Images/Champs/" + favChamps1 + ".png")
        self.ui.label_champs1.setPixmap(self.ui.favChamps1)
        
        self.ui.favChamps2 = QPixmap("Images/Champs/" + favChamps2 + ".png")
        self.ui.label_champs2.setPixmap(self.ui.favChamps2)

        self.ui.favChamps3 = QPixmap("Images/Champs/" + favChamps3 + ".png")
        self.ui.label_champs3.setPixmap(self.ui.favChamps3)

        favItems = getFavouriteItems(personal_Games)
        favItems1 = favItems[0][0]
        favItems2 = favItems[1][0]
        favItems3 = favItems[2][0]

        #Set Item images based on results
        
        self.ui.favItems1 = QPixmap("Images/Items/" + favItems1 + ".png")
        self.ui.label_items1.setPixmap(self.ui.favItems1)
        
        self.ui.favItems2 = QPixmap("Images/Items/" + favItems2 + ".png")
        self.ui.label_items2.setPixmap(self.ui.favItems2)

        self.ui.favItems3 = QPixmap("Images/Items/" + favItems3 + ".png")
        self.ui.label_items3.setPixmap(self.ui.favItems3)

        



import mainwindow_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = MainWindow()
    MainWindow.show()
    sys.exit(app.exec_())